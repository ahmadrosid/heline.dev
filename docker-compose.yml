version: '3.8'

services:
  # Apache Solr service
  solr:
    image: solr:8.11.4
    container_name: heline-solr
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
    command: >
      bash -c "
        solr-precreate heline &&
        exec solr -f
      "
    networks:
      - heline-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8983/solr/"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Heline Go application
  heline-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: heline-app
    ports:
      - "8000:8000"
    environment:
      - SOLR_BASE_URL=http://solr:8983
      - SOLR_PORT=8983
      - INDEXER_URL=http://heline-indexer:8080
    links:
      - heline-indexer
    depends_on:
      solr:
        condition: service_healthy
    networks:
      - heline-network
    volumes:
      - .:/app
      - app_data:/app/_build
    working_dir: /app
    command: bash -c "cp /heline /app/ && heline server start"

  # Heline Indexer API Service (Rust application)
  heline-indexer:
    build:
      context: ./heline-indexer
      dockerfile: Dockerfile
    container_name: heline-indexer
    ports:
      - "8080:8080"
    environment:
      - SOLR_BASE_URL=http://solr:8983
      - API_PORT=8080
    volumes:
      - indexer_repos:/app/repos
    depends_on:
      solr:
        condition: service_healthy
    networks:
      - heline-network
    command: >
      bash -c "
        ./heline-indexer api
      "
  
  # Development service with all dependencies
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: heline-dev
    ports:
      - "8000:8000"
      - "3000:3000"
    environment:
      - SOLR_BASE_URL=http://solr:8983
      - SOLR_PORT=8983
      - INDEXER_URL=http://heline-indexer:8080
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      solr:
        condition: service_healthy
      heline-indexer:
        condition: service_started
    networks:
      - heline-network
    # Use a Docker-friendly approach to start the application
    command: >
      bash -c "cd /app && \
      if [ ! -d \"ui/node_modules\" ]; then \
        cd ui && pnpm install && cd ..; \
      fi && \
      go build -o heline && \
      ./heline server start & \
      cd ui && pnpm dev"

networks:
  heline-network:
    driver: bridge

volumes:
  solr_data:
    driver: local
  app_data:
    driver: local
  indexer_repos:
    driver: local
